{"meta":{"title":"JasonWe","subtitle":"Keep going,never stop","description":"Code & Life","author":"Jason We","url":"https://jason-we.github.io","root":"/"},"pages":[{"title":"404","date":"2018-09-30T09:25:30.000Z","updated":"2020-10-19T09:17:03.531Z","comments":true,"path":"404.html","permalink":"https://jason-we.github.io/404.html","excerpt":"","text":""},{"title":"about","date":"2020-10-17T06:34:37.000Z","updated":"2020-10-19T09:17:03.531Z","comments":true,"path":"about/index.html","permalink":"https://jason-we.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-10-17T06:32:43.000Z","updated":"2020-10-19T09:17:03.532Z","comments":true,"path":"categories/index.html","permalink":"https://jason-we.github.io/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-10-17T06:35:55.000Z","updated":"2020-10-19T09:17:03.533Z","comments":true,"path":"friends/index.html","permalink":"https://jason-we.github.io/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-10-17T06:33:34.000Z","updated":"2020-10-19T09:17:03.533Z","comments":true,"path":"tags/index.html","permalink":"https://jason-we.github.io/tags/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-10-17T06:35:09.000Z","updated":"2020-10-19T09:17:03.532Z","comments":true,"path":"contact/index.html","permalink":"https://jason-we.github.io/contact/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客搭建之使用git分支实现多终端环境","slug":"Hexo博客搭建之使用git分支实现多终端环境","date":"2020-10-19T09:21:55.000Z","updated":"2020-10-20T00:34:46.581Z","comments":true,"path":"2020/10/19/hexo-bo-ke-da-jian-zhi-shi-yong-git-fen-zhi-shi-xian-duo-zhong-duan-huan-jing/","link":"","permalink":"https://jason-we.github.io/2020/10/19/hexo-bo-ke-da-jian-zhi-shi-yong-git-fen-zhi-shi-xian-duo-zhong-duan-huan-jing/","excerpt":"","text":"问题 该文前提默认你已经使用hexo在GitHub上搭建起了自己的博客系统，强烈建议先搭建好博客再读此文！ 如果你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者实验室的台式机，发现你电脑里面没有博客的文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？ 在这里我们就可以利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。 hexo机制由于hexo d上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。 也就是上传的是在本地目录里自动生成的.deploy_git里面。 其他文件 ，包括我们写在source 里面的，和配置文件，主题文件，都没有上传到github 所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。 具体操作新建分支首先在你的github pages项目仓库（如我的是Jason-We.github.io新建一个分支，名称自拟，可以是hexo。 然后在这个仓库的settings中，选择默认分支为hexo（这样每次同步的时候就不用指定分支，比较方便）。 本地克隆在本地的任意你喜欢的目录下，将上述仓库克隆下来，因为默认分支已经设成了hexo，所以clone时只clone了hexo。接下来在克隆到本地的ZJUFangzh.github.io中，把除了.git 文件夹外的所有文件都删掉 把之前我们写的博客源文件全部复制过来，除了.deploy_git。这里应该说一句，复制过来的源文件应该有一个.gitignore，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git： .DS_Store Thumbs.db db.json *.log node_modules/ public/ .deploy*/ 注意，如果你之前克隆过theme中的主题文件，那么应该把主题文件中的.git文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了。 然后， git add . git commit –m \"add branch\" git push 这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中node_modules、public、db.json已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装 。 换电脑操作在你已经安装好了git、nodejs、hexo的机器上，再任意你喜欢的空文件夹下，将你上述push好的的仓库克隆到本机。进入到该目录后，执行： npm install npm install hexo-deployer-git --save 之后 ， 生成+部署： hexo g hexo d 至此，已经搞定啦。接下来就可以在这台机器上愉快的写博客了。 hexo new \"你的文章名称\" Tips 不要忘了，每次写完最好都把源文件上传一下 git add . git commit –m \"xxxx\" git push 123 如果是在已经编辑过的电脑上，已经有clone文件夹了，那么，每次只要和远端同步一下就行了 git pull","categories":[{"name":"hexo","slug":"hexo","permalink":"https://jason-we.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jason-we.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://jason-we.github.io/tags/git/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://jason-we.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"第一篇博客","slug":"第一篇博客","date":"2020-10-16T02:52:23.000Z","updated":"2020-10-16T07:48:12.648Z","comments":true,"path":"2020/10/16/di-yi-pian-bo-ke/","link":"","permalink":"https://jason-we.github.io/2020/10/16/di-yi-pian-bo-ke/","excerpt":"","text":"First Blog使用Typora进行博客文章编写。 Readable &amp; WritableTypora gives you a seamless experience as both a reader and a writer. It removes the preview window, mode switcher, syntax symbols of markdown source code, and all other unnecessary distractions. Instead, it provides a real live preview feature to help you concentrate on the content itself.","categories":[],"tags":[{"name":"first","slug":"first","permalink":"https://jason-we.github.io/tags/first/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://jason-we.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jason-we.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://jason-we.github.io/tags/git/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://jason-we.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"first","slug":"first","permalink":"https://jason-we.github.io/tags/first/"}]}